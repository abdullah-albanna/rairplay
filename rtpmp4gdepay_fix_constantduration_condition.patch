diff --git a/net/rtp/src/mp4g/mode.rs b/net/rtp/src/mp4g/mode.rs
index 663518d..bc64ad7 100644
--- a/net/rtp/src/mp4g/mode.rs
+++ b/net/rtp/src/mp4g/mode.rs
@@ -83,13 +83,16 @@ impl ModeConfig {
 
         let size_len = Self::parse_int::<u8>(s, "sizelength")?;
         let constant_size = Self::parse_int::<u32>(s, "constantsize")?;
+        let constant_duration = Self::parse_int::<u32>(s, "constantduration")?;
 
         if size_len != 0 && constant_size != 0 {
             Err(BothAuSizeLenAndConstantSize)?;
         }
 
         if size_len == 0 && constant_size == 0 {
-            Err(NeitherAuSizeLenNorConstantSize)?;
+            if constant_duration == 0 {
+                Err(NeitherAuSizeLenNorConstantSize)?;
+            }
         }
 
         // ยง 3.2.1
@@ -116,7 +119,7 @@ impl ModeConfig {
             stream_state_indication: Self::parse_int::<u8>(s, "streamstateindication")?,
             auxiliary_data_size_len: Self::parse_int::<u8>(s, "auxiliarydatasizelength")?,
             constant_size,
-            constant_duration: Self::parse_int::<u32>(s, "constantduration")?,
+            constant_duration,
             max_displacement: Self::parse_int::<u32>(s, "maxdisplacement")?,
         })
     }
@@ -162,7 +165,9 @@ impl ModeConfig {
         }
 
         if self.size_len == 0 && self.constant_size == 0 {
-            Err(NeitherAuSizeLenNorConstantSize)?;
+            if self.constant_duration == 0 {
+                Err(NeitherAuSizeLenNorConstantSize)?;
+            }
         }
 
         if self.index_len > 0 && self.index_delta_len == 0 {
